swagger: '2.0'
info:
  version: '0.1.0'
  title: Generic Blog Server
# during dev, should point to your local machine
host: localhost:8080
basePath: /api/v1
schemes:
  # remove http for production
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
- name: 'posts'
  description: 'View and create posts'
- name: 'auth'
  description: 'Create and log into accounts'
securityDefinitions:
    Bearer:
        type: apiKey
        name: Authorization
        in: header
# paths are defined in their route files in the paths directory
paths: {}
responses:
  InvalidRequest:
    description: Invalid request
    schema:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            required:
              - path
              - errorCode
              - message
              - location
            properties:
              path:
                type: string
              errorCode:
                type: string
              message:
                type: string
              location:
                type: string
  Error:
    description: Unexpected error
    schema:
      required:
        - error
      properties:
        error:
          type: string
definitions:
  Username:
    type: string
    pattern: '^(?=.{3,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$'
    description: The username of a user
  User:
    required:
      - username
      - password
      - email
    properties:
      username:
        $ref: '#/definitions/Username'
      password:
        type: string
        minLength: 8
        description: The password of the user
      email:
        type: string
        pattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
        description: The email address of the user
  UploadPost:
    required:
      - title
      - content
    properties:
      title:
        type: string
        minLength: 1
        maxLength: 100
      content:
        type: string
        minLength: 1
  Post:
    allOf:
      - $ref: '#/definitions/UploadPost'
      - required:
          - user_id
          - author
        properties:
          user_id:
            type: integer
            minimum: 1
          author:
            type: string
  Posts:
    required:
      - rows
    properties:
      rows:
        type: array
        items:
          $ref: '#/definitions/Post'
